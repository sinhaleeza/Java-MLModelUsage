Managing operational and semantic inter dependencies among software services is a relatively unexplored topic, despite its relevance to automating service deployments and to increased availability. In this paper we describe a framework for structured and programmatic dependency management among services written in the Java/spl trade/ programming language. The framework's interface allows for defining an acyclic graph of dependencies. The graph's structure reflects the startup sequence of managed services. Upon a service failure or intentional termination, the dependencies are consulted to determine which services may be affected. If the dependencies so dictate, a service that has gone off-line will automatically be restarted. The requisite changes, e.g., restarting, will be propagated along the graph's edges to ensure that the required dependencies are satisfied for each service. We demonstrate the usefulness of this framework through real-life case studies.