Service oriented architecture (SOA) helps dynamically construct composite services out of a set of low-level atomic services to satisfy customer requirements. For the purpose of capacity planning and resource provisioning, it is important to understand these services' demand for system resources, e.g., CPU. In this paper, we propose a black-box method for estimating CPU demand of service requests based on linear regression between the observed request throughput and resource utilization level. A key advantage of our method is that its input data (i.e., request-processing throughput and resource utilization) can be easily obtained without intrusive software instrumentation. Moreover, we observe that, in an SOA environment, the service composition relationship (i.e., how low-level atomic services are connected into a composite service) is either known in advance or can be discovered through various means. We leverage this composition relationship to further improve the quality of CPU demand estimation. By analyzing the dependency between a composite service and its constituent low-level atomic services using linear algebra, our method can eliminate the collinear problem introduced by the service composition relationship. Moreover, our method can further reduce the number of unknown variables in the linear regression problem, and hence reduce the time duration needed to collect input data. In a dynamic SOA environment, this translates into faster response to changing workloads and more accurate estimation. We demonstrate these advantages of our method over a baseline method through extensive evaluation.