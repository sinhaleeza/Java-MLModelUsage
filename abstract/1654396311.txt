Application integrations employ interacting software components and services. Components - distributed, black-box, processing elements - may have distinct communication styles. Services can be used to augment the interaction of components to deliver on a common task. Unfortunately, there exist scenarios where components and services do not interact congenially. At issue is the service design that, even with standards in place, may ignore important aspects of component communication expectations. Thus, a complete integration is not achieved without implementing ad hoc glue code external to the design strategy. Introducing glue code, without design traceability, limits control, dynamism, and upgrades to components and services. We specify templates for framing glue code as integration completion functions (ICFs). Uniform designs are given using multiple modeling techniques to foster compilation of an ICF repository, where their instantiation can be plug-ins to application integrations.