Context-awareness and adaptability are important and desirable properties of service-based processes designed to provide personalized services. Most of the existing approaches focus on the adaptation at the process instance level which involves extending the standard Business Process Execution Language (BPEL) and its engine or creating their own process languages (e.g. However, the approach proposed here aims to apply an adaptation to processes modeled or developed without any adaptation possibility in mind and independently of specific usage contexts. In addition, most of the existing approaches tackle the adaptation on the process instance or definition levels by explicitly specifying some form of variation points. This, however, leads to a contradiction between how the architect logically views and interprets differences in the process family and the actual modeling constructs through which the logical differences must be expressed. We introduce the notion of an evolution fragment and evolution primitive to capture the variability in a more logical and independent way. Finally, the proposed approach intends to support the viewpoint of context-aware adaptation as a crosscutting concern with respect to the core “business logic” of the process. In this way, the design of the process core can be decoupled from the design of the adaptation logic. To this end, we leverage ideas from the domain of model-driven development (MDD) and generative programming.