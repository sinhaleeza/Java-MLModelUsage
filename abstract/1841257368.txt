Service chaining, the act of stringing a sequence of services together to form a new service, is a key element of Web services. However, for Web services to reach its full potential the issue of testing service-chaining at the network level must be resolved. How can one map the microlevel service-service interactions to the macrolevel system performance? For instance, as service chains become longer and more complex, how do they affect end-user quality of service? Focusing on aggregate service chains $situations in which the user invokes a service that carries out the chain, without the user being aware of the individual services - we tackle these questions using a Java simulation tool to model service chaining, visualize network traffic and quantify service chain complexity. We demonstrate that one can orchestrate very complex service chains in a simple distributed manner and quantify how service chain complexity affects end-user quality of service and network loading.