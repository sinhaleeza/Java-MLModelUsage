XML vocabularies like RSS (really simple syndication) or domain specific syntactic syndication frameworks allow for creation of raw data that can be understood by a wide range of consuming portals and Web sites. Often individual aggregators create content from such feeds however, every single aggregator needs to render UI content separately. Avoiding this via reuse requires creation of presentation-oriented services for dynamic generation of content from same base XML data. Web services for remote portlets (WSRP) provides standards based interfaces for creation of presentation oriented services using Web services technology.However, any WSRP based remote portlet needs to be refreshed every time when even a single data element changes in the portlet. Complementarity, technologies like Asynchronous JavaScript and XML (AJAX) also allow for content aggregation and asynchronous data retrieval. Unlike WSRP, in AJAX only the required control needs to be refreshed, whenever data changes. In AJAX too, every aggregator is required to include AJAX control accessing the same back end service leading to considerable replication of effort. These two technologies complement each other in terms of ease of sharing of aggregated content and better usability of such content. Overall, often there is a requirement to dynamically generate UI content from XML data, customize and share aggregated content with remote consumers and finally allow for partial updates of remote aggregated content for better usability. We take a holistic view of the problem statement and propose an end to end architectural approach that combines usage of WSRP, AJAX along with XML syndication feeds like RSS for creation of standards based, customizable, and dynamically generated reusable UI that has better interactivity, speed and usability.