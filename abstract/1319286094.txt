In the ARM-based mobile virtualized environment, optimizing both the network throughput and the latency for network-intensive applications is of great importance. Our experimental studies have shown that the context switch between the host and guest triggered by a hypercall results in CPU overload and thus degrades the I/O performance under an intensive workload. To address this problem, we propose the Adaptive Hypercall Coalescing (HyperCo) algorithm, a software-only approach to optimizing the network I/O performance by reducing the number of hypercalls and achieving a trade-off between throughput and latency. We implement HyperCo by modifying the front-end driver of Virtio-net on the KVM/ARM platform, and we carry out extensive performance evaluations, which indicate that the number of hypercalls and the load on the CPU can be significantly reduced. We show that HyperCo can significantly improve the network throughput under an intensive workload while keeping a low penalty by adapting a coalescing interval dynamically at a low frequency of network I/O requests.