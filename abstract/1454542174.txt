The capability to easily find useful services (software applications, software components, scientific computations) becomes increasingly critical in several fields. Current approaches for components retrieval are mostly limited to the matching of their inputs/outputs. To go beyond the limits of these approaches, a substantial effort has been done by different works on semantic Web and ontologies by exploiting more knowledge on the semantics of the components. However, this effort still remains insufficient and does not fulfil user needs as many functional or quality aspects are hidden within the specification of components behavior. In this paper we argue that, in many situations, the component discovery process should be based on the specification of this behavior that is the process model, which describes each component. The idea behind is to develop matching techniques that operate on process models and allow delivery of partial matches and evaluation of semantic distance between these matches and the user requirements. Consequently, even if a service satisfying exactly the user requirements does not exist, the most similar ones will be retrieved and proposed for reuse by extension or modification. To do so, we reduce the problem of service behavioral matching to a graph matching problem and we adapt existing algorithms for this purpose.