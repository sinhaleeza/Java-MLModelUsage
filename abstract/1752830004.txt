Service constraints are usage restrictions on service features that are imposed by service providers. Such constraints need to be verified prior to the execution of a service in order to ensure correct service execution. In the case of composite services, the set of applicable constraints is derived from the service constraints defined over the individual service components that are part of the service plan. During the execution of a composite service, a constraint-aware composite service execution model can be used to manage and eventually operationally verify the service constraints prior to the corresponding service's execution. In addition to service constraints, other constraints might be imposed to put externally-defined restrictions on composite services. Such externally-defined restrictions are likely to be defined and become or cease to be applicable after the composite service has been assemble and deployed. Such a situation requires adaptation of the plan to a set of externally-defined constraints. Current web service composition adaptation approaches only focus on adaptation to failure in functional capabilities or Quality of Service (QoS) properties which can be dealt with re-construction of the composite service. However, we argue that adaptation to external constraints does not necessarily require changes in the plan of a composite service. In this paper, we define a constraint-based composite service model that not only considers service constraints, but also adapts composite plans according to new constraints that might add new restriction to the composite service at run time. A publicly available test set generator is used to compare the proposed solution with other existing service adaptation solutions.