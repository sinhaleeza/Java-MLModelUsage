Services Computing has turned into the mainstream programming paradigm for building enterprise systems that are distributed in nature. However, the programming power available to the developers of service oriented systems has been slow to catch up. The object abstraction continues to be the prevalent mechanism for implementing services based software systems and has several drawbacks. A key drawback is the fact that programmers are provided the business requirements in terms of services but are expected to implement them using objects, leading to an abstraction gap that the programmer is expected to fill. In this paper, we formalize the notion of services as first class entities through a typed calculus, called Psi-CAL. Psi-CAL models major operations for service manipulation including creation, discovery, and invocation as well as establishing relationships among services. We present the syntax and semantics of Psi-CAL with a corresponding type system, towards building a programming language for services computing.