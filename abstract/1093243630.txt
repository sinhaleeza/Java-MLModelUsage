We examine the lifecycle requirements of intermittently connected web-applications (ICWAs) and investigate whether such applications can be developed as an "always connected" web-application combined with middleware that address ICWA requirements. We show that this is difficult to do because ICWAs require application-specific logic that is not easily combined with a middleware API. We therefore propose the use of "middleware components" in the areas of data-provisioning and change-set propagation. Combined with application-specific logic, these components make it easier to develop an ICWA by reducing the amount of required developer code. We show how our prototype UNTETHER system implements these components and reduces the burden on the application developer.