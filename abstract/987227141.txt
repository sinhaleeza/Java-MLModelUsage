The execution time of computationally-intensive applications such as protein folding and fractal generation can be reduced by implementing these applications as Web services that run in parallel. Additionally, some of these Web services may save state periodically to resume execution later on. However, currently, there is no solution to load balance this class of Web services, and to replicate the saved state for the purposes of resumption. This paper describes the architecture of JULIET, a system that load balances .NET Web services across a Windows cluster in a distributed fashion. The system is also fault tolerant since it supports failovers and replication of data generated by the Web services at the application level. The system is designed to be minimally-visible to the Web service and the client that consumes it.