A service-based SaaS application can achieve economies of scale by sharing partner services between tenants at runtime, following the Single-Instance Multi-Tenancy (SIMT) model. However, supporting runtime sharing with tenant-specific functional and performance variations in an SIMT application is challenging. We propose an approach, Software-Defined Service Networking (SDSN), to addressing this challenge. SDSN realizes an SIMT application with a managed service network (SN) and a set of managed virtual service networks (VSNs) that share the SN. The SN connects a set of services according to their capability and interoperability. To achieve the requirements of a particular tenant, a VSN uses a subset of the services under a particular architecture and a control policy. We describe how the SN and its VSNs are designed and enacted to achieve the SIMT objectives. We show the feasibility of the SDSN, demonstrate the utilization benefits it achieves, and quantify the runtime overhead it incurs.