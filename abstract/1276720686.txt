SOA-based solutions are typically modeled as business processes composed of loosely coupled services. Such an approach promises the flexibility to more easily customize the solution functionality in line with constantly changing customer requirements. The research issue that we address in this paper, therefore, is how to best accomplish this customization. Current approaches are typically manual and rather ad-hoc, involving repeated attempts to synchronize between (higher-level) design artifacts and (lower-level) source code to determine the configuration points. Alternatively, we propose a framework, Morpheus, which uses design artifacts to locate points of change in an SOA based solution via multi-level change propagation. First, we formally define the structure and semantics of the design artifacts, and the relationships among them. Second, we use these relationships to enumerate all possible changes in each design artifact; if two design artifacts share a relationship,then we also map a change in one design artifact to related changes in the other. Third, using these change relationships,we present an algorithm to traverse the design artifacts so as to propagate changes based on change requirements, ultimately resulting in the modifications needed to support the changed requirements. We illustrate our ideas on a simple yet realistic example in the insurance domain, and also present a prototype implementation.