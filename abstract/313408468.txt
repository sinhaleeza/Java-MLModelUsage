Service searching and ranking are the bases of service-oriented software development. However, the existing service searching and ranking methods are confined to the atomic services or processes encapsulated as stand-alone services. How to find and reuse arbitrary granularities of service process fragment (SPF) is a challenging problem with great application value. In this paper, we propose a new mechanism to support searching and ranking on massive SPFs. In this mechanism, SPFs are organized by a tree, where both the functional and non-functional information of SPFs are encoded and stored on each tree node. Then, starting from the tree root, an integrated searching and ranking process is recursively conducted on each tree layer, excluding a great deal of irrelevant SPFs each time, until leaf nodes are reached. To verify the feasibility and effectiveness, we construct a sample dataset which contains four million processes and one billion atomic services based on the Web Service Challenge Testset Generator (CTG), and each atomic service has up to 10 QoS values. The experimental results show an effective and efficient approach for SPF-Query.