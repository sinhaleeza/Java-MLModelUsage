This article proposes a unified methodology for designing asynchronous SOA (Service-Oriented Architecture) based on the asynchronous messaging models and patterns. Conventional SOA focuses on synchronous messaging. Although asynchronous messaging provides much efficient and productive way to coordinate services, design of aSOA (asynchronous SOA) is far more complicated due to the variety of messaging and architecture while assuring behavioral consistency of architecture. This paper proposes a model-driven design methodology for aSOA. The methodology is based on aMEPs (Asynchronous Message Exchange Patterns) identified by classifying the messaging in terms of behavioral concerns. Based on the meta-model of aSOA, a set of aSOA patterns is generated by composing aMEPs. Then, an aSOA pattern is selected and transformed to a platform specific aSOA on top of Web services standards. We successfully implemented an aSOA on Apache Axis, which enables to asynchronous messaging of SOAP over SMTP. We demonstrated that conventional methods are subsets of the proposed methodology, which is the major contribution of this work.