Service-Oriented Computing is a paradigm that uses services as building blocks for building distributed applications. The primary motivation for orchestrating services in the cloud used to be distributed business processes, which drove the standardization of the Business Process Execution Language (BPEL) and its central notion that a service is a business process. In recent years, there has been a transition towards other motivations for orchestrating services in the cloud, e.g., XaaS, RMAD. Although it is theoretically possible to make all of those services into WSDL/SOAP services, it would be too complicated and costly for industry adoption. Therefore, the central notion that a service is a business process is too restrictive. Instead, we view a service as a technology neutral, loosely coupled, location transparent procedure. With these ideas in mind, we introduce a new approach to services orchestration: Ozy, a general orchestration container. We define this new approach in terms of existing technology, and we show that the Ozy container relaxes many traditional constraints and allows for simpler, more feature-rich applications.