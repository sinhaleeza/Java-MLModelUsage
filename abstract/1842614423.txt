In web browsers with cloud assisted rendering such as Opera Mini and UC Mini, the rendering information in the HTML file on the cloud server is compressed to an intermediate lightweight format to save speed and bandwidth before sending to the client device. This causes a loss in rendering quality of content such as shapes, text and spacing since the JavaScript, CSS and animation information is lost while compressing the file. Also, the response to user gestures on the client web browser to resize the web content also results in reduced rendering quality. Thus the resultant rendering quality on the client device is not identical to the original web page when pixel by pixel comparison is performed. In this paper we present the architecture of a rendering engine that distributes the rendering process among the client and server in such a way that the pixel by pixel rendering is identical to the original web page. Our solution seeks to incorporate the best of server assisted and pure client side rendering, by saving on bandwidth, memory and power and also not compromising on the rendering quality. We present a couple of alternate methods in which the architecture can be implemented, and present the results of some tests to prove the latency and bandwidth saving. This system is useful in a variety of web browsers especially those embedded in home appliances.