Composing business processes from individual services can be viewed as a planning problem in which a planner determines the execution orders of services in a process. Most existing Web service composition research considers connecting Web services into a business process. We argue that most existing Web services are informative Web services that are not the actual business services, but give the parameters of their correspondent business services. The planning problem is not only to select the proper business services, but also to determine the parameters of the business services which affect the ordering of the business services. Furthermore, it is not possible to extract all information from informative Web services through queries. The planner has to work with the problem space that is not fully enumerable. This paper presents a method to optimize planning results with incompletely observed problem space. Genetic algorithms (GA) help to navigate the incompletely observed problem space. At each loop of GA, Web service data are queried and a new sub problem space is built. The planner works with the sub problem space and calculates all feasible plans. The plans are evaluated by GA in fitness function and the best plans are kept for the next loop of GA. The fitness function of GA reflects domain-dependent user preferences. The selected final plan is an optimized feasible plan though global optimization is not guaranteed