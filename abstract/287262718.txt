The availability of scarce resources in a service-oriented system demands for context-aware selection policies that adapt based on service-level agreements (SLAs). One of the open issues is to prioritize service requests in dynamically changing environments where concurrent instances of processes may compete for resources. Here we propose a runtime monitoring approach to observe the actual state of the system. We argue that priorities should be assigned to requests based on potential violations of SLA objectives. While most existing work in the area of quality of service monitoring and SLA modeling focuses typically on purely technical systems, we consider service-oriented systems spanning both software-based services and human actors. Adaptive request scheduling in such systems is challenging due to the poorly predictable behavior of human actors in performing tasks. Our approach helps to cope with these challenges by prioritizing service requests that may cause violations of SLAs and corresponding objectives that are associated with processes.