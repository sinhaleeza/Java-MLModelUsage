The one-way messaging pattern, in which a message sender does not expect any response, is fast and convenient for many applications, but whenever reliable communication is needed, developers either use heavy-weight middleware, such as JMS, or implement request-response interactions, based on TCP. However, TCP is poorly adapted to one-way messaging, because it offers a streaming channel with no mechanisms to encapsulate or track messages. Moreover, TCP does not tolerate connection crashes, forcing developers to come up with their own custom, error-prone solutions, to recover from crashes. In this paper, we propose three TCP-based design patterns that address these limitations, and facilitate developing light-weight and reliable one-way message-based applications. Our solutions are correct, modular, and involve low programming complexity.