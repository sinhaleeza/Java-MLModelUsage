Service-based software applications, such as pervasive and ubiquitous ones, are increasingly embedded in our daily lives integrating smart communicating devices. Usually, changes in the execution context of these applications occur unpredictably over time, such as dynamic variations in the availability of the used services and devices, or of the user location and needs. This unpredictable variability in the execution contexts makes impossible to know at design-time the exact conditions under which these applications will be used and the services that will be most suited at a given time. Therefore, the architecture of such applications cannot be fully defined at design-time. These applications must be defined in abstract and flexible ways, allowing incremental composition and dynamic adaptation to their execution context at runtime. In this paper, we present a model-driven approach for designing, developing, executing and managing service-based applications. At design-time, an application is mainly defined by its requirements and goals. The application definition can be extended to add specific functional or non-functional concerns, such as dynamic adaptation, deployment or distribution. At development-time, the application can be automatically and incrementally composed, ensuring its consistency with respect to its definition. At runtime, the application execution is supported and controlled by our runtime environment.