A telecom operator ("service provider", SP) offers various services to subscribed customers by partnering with various third party providers ("content provider", CP). The SP acts as a liaison between subscribers and partners. One of the main functions of the SP, therefore, is to match the "demand" of the subscribers with the "supply" of the CPs. Such a matching is a prerequisite for efficient service selection while ensuring customer satisfaction, and is useful for optimisation, such as resource allocation and load balancing. The "demand" requirements and "supply" guarantees can be concretized using service level agreements (SLAs). SLAs can be expressed formally using standards such as WSLA or WS-Agreement. We present a system that automates the task of finding a matching between these two sets, subscriber-SP and SP-CP, of SLAs. First, the SLAs are normalised to a common denominator, then composed if required, and finally the matching engine computes and outputs the map. The matching algorithm, which is of central importance, compares logical expressions involving predicates. The logical expressions are first converted into CNF-form, and instead of naive O(m times n) comparisons, we develop a more efficient approach to solve the problem. As a proof-of-concept, we have implemented a prototype as an Eclipse plugin