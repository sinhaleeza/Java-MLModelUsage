Interoperability is the ability of software and hardware on various machines from various vendors to communicate with each other without significant changes to either side. SOA implementations have a wide variety of disparate products, such as portal, business process engine, enterprise service bus, application server, registry etc., from same or different vendors. These products need to interoperate with each other for the system to behave as a cohesive whole and provide the desired functionality. Usually open Web Service standards and specifications are used to connect these products in an SOA stack However, interoperability cannot be guaranteed due to various reasons like differences in the versions of Web Service standards and specifications supported, differences in error handling mechanisms, differences in protocol support etc. Before an enterprise decides on its SOA enabled products, the interoperability between them should be tested against at least a couple of business processes. We have built a methodology to verify the interoperability of the various products in an SOA stack based on a case study carried out for a customer.