Software service organizations typically develop custom solutions from scratch in each project engagement. This is not a scalable proposition, since it depends too heavily on labor alone. Rather, creating and reusing software "assets" is more scalable and profitable. One prevalent approach to building software solutions is to use service-oriented architecture (SOA) to compose software services to support business processes. In this context, the key to reusing assets is to support the right mechanisms to incrementally refine existing software services as well as business processes. In this paper, we propose a set of mechanisms called Variation-Oriented Engineering (VOE) to support this incremental refinement. VOE is a comprehensive formal approach for modeling end-to-end variability in SOA-based solutions for the purpose of enhancing reusability. We illustrate our approach on a realistic example from the insurance domain, via a prototype implementation.