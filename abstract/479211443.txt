HTTP/2 is the next-generation Web protocol based on Google's SPDY protocol, and attempts to solve the shortcomings and inflexibilities of HTTP/1.x. As smartphones become the main access channel for Web services, we are curious if HTTP/2 can really help the performance of Web browsing. In this paper, we conduct a measurement study on the performance of HTTP/2 and HTTPS to reveal the mystery of HTTP/2. We clone the Alexa top 200 websites into our own server, and revisit them through HTTP/2-enabled proxy, and HTTPS-enabled proxy, respectively. We compare HTTP/2 and HTTPS as a transport protocol to transfer Web objects to identify the factors that may affect HTTP/2, including Round-Trip Time (RTT), bandwidth, loss rate, number of objects on a page, and objects sizes. We find that HTTP/2 hurts with high packet loss, but helps many small objects. The computation and dependencies of fetching Web objects reduce the performance improvement of HTTP/2, and sometimes can even hurt the performance of page loading. At last, we test the server push feature of HTTP/2 to leverage the performance.