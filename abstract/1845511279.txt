A composite Web service designed based on abstract Web services, which define only interfaces, allows an application developer to select services required for his application only by setting endpoints for the atomic Web services. In open environment, however, the composite Web service configured in this manner may fail due to unique behaviors of the selected services. It is difficult for the designer of the composite Web service to prevent the failure because he does not know which services are selected and how they behave. On the other hand, the application developer is not authorized to modify the composite Web service due to the need to protect intellectual rights. Our solution is Service Supervision, which monitors and controls execution of composite Web services. Service Supervision makes the followings possible. 1) An application developer can control the behavior of a composite Web service by changing the execution state, even if the he is not authorized to modify the composite Web services. 2) A control pattern for coordinating Web services can be applied to various composite Web services in order to reduce the load imposed by designing control processes. In order to realize Service Supervision, we introduce meta-level control of a composite Web service. Moreover we then use the choreography to define the interaction protocols for the controls. The proposed framework is based on existing standard languages, WS-BPEL and WS-CDL. Therefore we can exploit existing tools and expertise of SOA engineers.