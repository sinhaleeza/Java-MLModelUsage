XML plays an important role in building enterprise applications. However, most of the XML-based applications, particularly the emerging Web services, suffer from low performance caused by XML processing and thus bring negative user experience in terms of response time. We argue that by reducing the considerable overhead in garbage collection the XML processing performance can be improved. We begin by conducting a set of experiments to understand the XML parser's memory characteristics, such as heap composition, object size and type distributions, object lifetime, and so on. Then, we get the valuable findings for improving performance that XML processing, which violates the weak generational hypothesis, is a memory allocation intensive workload in which most objects are small and long-lived. The findings can benefit the design of XML parsing specific GC and related tools designed to improve XML processing performance for Web services