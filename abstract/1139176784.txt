Quality attributes play a very relevant role in the service-oriented computing world, as they allow distinguishing between functionally equivalent services. In fact, these attributes impact various activities related to the life-cycle of service-based applications (SBAs), starting from service discovery and permeating other activities such as service level agreement establishment and monitoring. Considering their relevance, it is essential that these attributes are precisely defined. Moreover, as quality attributes are inherently dynamic, they must be continuously monitored. In this context, this paper proposes a meta-model that formally defines and connects service, quality and event domains. From one perspective, the connection between service and quality domains enables the design of models that formally specify applications' functional and non-functional requirements. From another perspective, connections between quality and event domains enable quality engineers to define how relevant quality attributes and metrics can be computed based on a set of runtime events. Conformant models can be interpreted at runtime by compatible platforms allowing them to dynamically (re)configure their monitoring mechanisms.