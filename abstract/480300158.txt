Service-Oriented architecture (SOA) based applications have assumed widespread acceptance owing to their agility, maintainability and modularity. However, the safety and reliability of such loosely coupled systems entirely depend on the precision of service descriptions. Consequently any implicit assumption or unforeseen usage scenarios can lead to catastrophic fiascos. This is further exacerbated by the overlapping constructs and inconsistencies in Business Process Execution Language (BPEL), the de-facto industry standard for service composition. This paper extends the Spring framework to devise a verification framework for service composition wherein each BPEL activity is represented by a Java bean. The framework instantiates the beans corresponding to activities in a BPEL specification and injects the dependencies to yield a bean-factory. Thereafter Java Architecture for XML Binding (JAXB) 2 APIs are used to transform the bean-factory into an XML based formal-model (e.g. Coloured Petri nets (CPN)) or an interchange format (e.g. Petri Net Markup Language (PNML)) for simulation and verification. In addition to automating the verification process, the proposed framework helps to combat the ad-hoc nature of existing solutions. Results indicate that the framework has an average transformation time of. 7 sec.