An interface adapter is used to allow a client application to transparently work with a service available in the local environment by converting the interface of an originally requested service into that of the available service. To generate adapters for users, interface matching is the first job to find out all the possible method matching pairs between a source interface and a target interface. Existing method matching schemes compare the schemas of source and target interfaces but they have low recall and precision because they only consider signatures and names of interfaces. For solving these problems, we propose a cluster-based schema matching scheme. By clustering methods in terms of parameter similarity, the proposed scheme can match methods more precisely than existing schema matching schemes. Then, we detect incorrect matches based on the analysis of incorrect method matching pairs.