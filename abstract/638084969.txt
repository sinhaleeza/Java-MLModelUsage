In this paper, we consider the change management process for enterprise IT services with the goal of improving the efficiency of this process, i.e., minimizing change completion time and maximizing the "change capacity". The change management process handles critical updates in the system that must be implemented by a set of executing personnel. In presence of such timing constraints and scheduling conflicts between change classes, we argue that addressing the application change management question optimally involves computing solutions to NP-hard problems. Using appropriate simulation models, we evaluate various batched scheduling alternatives to understand the effect of simple process re-engineering on the change completion time, and the change capacity of the system. In addition, we examine the benefit of executor cross-training and degree of conflicts on the performance of the system. Our results indicate that a simple longest queue based scheduling approach works well in a wide range of practical scenarios. Based on these results, we recommend process re-engineering based on longest queue based scheduling with a small degree of executor cross-training.