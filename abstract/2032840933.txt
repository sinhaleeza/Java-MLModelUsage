Web service applications integrate explicit client-service interactions with notification-style programming. Such event-driven interactions are often called implicit invocations because the notification message is not in itself a business interaction. Rather, it is used to implicitly trigger such interactions as a means for reacting to events. Web Services specifications such as WS-Notification have been developed in order to standardize the way notifications are sent, but they only support the most basic form of event notification. In this paper, we discuss the architecture and the implementation of an expressive notification broker based on extension mechanisms presented by the WS-Notification specification. This broker improves the standard WSN broker in three ways. First, it supports event correlation and hence allows for composite event detection. Second, it integrates events and reactions into Event-Condition-Action (ECA) rules that can be registered directly at the broker. Third, it introduces event-driven lifecycle management for ECA rules, thus allowing to dynamically adapt these ECA rules to changing situations.