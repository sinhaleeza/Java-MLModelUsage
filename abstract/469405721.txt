With the advent of ubiquitous sensor-rich environments and location-based services, distributed event-based systems based on the publish/subscribe communication paradigm are becoming very important and crucial. In many large-scale distributed mission critical areas, publish/subscribe systems must support a large number of geographically distributed publishers and subscribers and ensure real-time event data to be delivered timely. The concern is that a large number of low priority events may clog the channel thereby causing high priority events to get delayed. The challenge raised for the event-based middleware in large-scale distributed system is that event priority determination engine must be efficient and scalable in term of priority rule size and event throughputs. Checking every rule for priority on-the-fly is not friendly to the cache. This paper proposed an innovative approach based on Bloom filter technique. This approach is cache friendly and the online computation time of event priority determination is independent of the rule size. This approach is based on two ideas: make the online queries as simple as possible and exploit the power of cache on the broker. The rule instantiation engine (RIE) is made offline while online part is the priority determination engine (PDE). A Bloom filter data structure is used by RIE to store the rule instances and their priorities. The complex rule evaluation is reduced to set membership testing as queries on Bloom filters. The PDE makes the querying simplified by event discretization. Results are then cached in the broker caches. Finally, we have an analysis on the system complexity and some open issues. The further evaluation with prototype experiments are under development and the results may be found in our later publication.