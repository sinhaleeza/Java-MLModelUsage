Business Process driven Service Oriented Architecture (SOA) allows for designing services that execute (or realize) atomic tasks of business processes. When developing and designing SOA applications using Model Driven Development (MDD), business processes and services are represented using specifications such as Unified Modeling Language (UML). UML based models help in specifying structural properties of services and the behavioral properties of a service composition, executing a business process. In a typical design scenario, architects develop process models (comprising of tasks) and service design independently and establish associations between tasks and the designed services. Service compositions representing business processes are verified with the designed services. Verification at design time is a manual activity and relies on the static information captured in these UML models. In this paper we describe a model-based approach that enables executing service compositions at design time. The process model and service model is transformed to an executable UML model and UML Action language (UAL) code fragments are automatically generated. UAL enables unambiguous specification of the behavior of service operations and their compositions. The generated executable model enables a precise behavior analysis of the process realization. We demonstrate the use of this approach by reporting on a reference model with 17 business processes and 127 business tasks realized using 13 Service interfaces.