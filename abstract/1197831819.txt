Service based applications leveraging different features are today the underpinnings of enterprise computing. However, current Web services composition systems make only use of functional requirements in the selection process of component Web services while transactional consistency is a crucial parameter of most business applications. In this work, we propose a formal approach for enforcing transactional requirements in Web service compositions using Event-B formalism. Our solution enables specifying composite Web services where partner Web services are selected at runtime according to the transactional requirements that are defined based on the Acceptable Termination States concept. The resulting composite Web service is compliant with the consistency requirements expressed by business application designers. Moreover, we incrementally combine proof based models with model checking to trace possible errors and then come back to make proofs of the proof obligations.