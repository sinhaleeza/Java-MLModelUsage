This paper introduces the multiagent protocols (MAP) Web service choreography language and demonstrates how service choreographies can be specified, verified, and enacted with a comparatively simple process language. MAP is a directly executable specification, services do not have to be preconfigured at design-time. Instead, a choreography, specified in MAP, can be sent dynamically to a group of distributed peers to execute at runtime. Furthermore, MAP is based on a formal foundation, this allows model checking of the choreography definition prior to live distribution and enactment. A motivating scenario, taken from the AstroGrid science use-cases, serves as the focal point for the paper and highlights the benefits of choreography, through data flow optimization and lack of centralized server. The MAP formal syntax and model checking environment are discussed in the context of the motivating scenario, along with MagentA, an implementation of MAP which provides a concrete, and open-source framework for the enactment of distributed choreographies. MAP is evaluated by demonstrating the languages conformance to the service interaction patterns, a collection of 13 recurring workflow patterns.