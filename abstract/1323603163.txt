With the evolution of mobile devices and app eco system, all major content providers develop services in native apps and web-apps. Web-apps have an inherent advantage of platform independent and uniform experience across devices, but the page load time, battery usage, and bandwidth consumption have to be improved. To solve some of these issues, there has been an introduction of Progressive Web Apps (PWA) by content providers. PWA apps use an effective caching policy on web resources based on its property. But the webpages are overwhelmingly non-PWA compliant. There is a need for non-PWA web pages to be effective in bandwidth utilization so that we can avoid the exchange of needless resources. This paper proposes a new method to inject a service worker into a webpage at Proxy Servers. This service worker is packaged along with non-PWA webpage as a response to web browser requests. The web engine then runs the service worker to identify stale web resources which in turn will be helpful to avoid transfer of redundant web resources. The proposed approach was evaluated using top 25 Non-PWA sites from Alexa 100 websites for one month. It saved an average of 25% data traffic and also provided an offline experience of these websites. This proposal can be further extended to create a generalized framework for seamlessly converting Non-PWA apps to PWA apps.