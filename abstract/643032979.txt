Architectural mismatch; the semantic and syntactic gap preventing component composition, can be partially alleviated through the ubiquity of the protocols for service composition (syntax). And yet, the semantics of service or component composition have remained elusive. The contribution of this paper builds on the notions introduced by grammar-oriented object design (GOOD) using the notion of manners to specify the semantics of services and drive their automated composition through dynamically reconfigure architectures enabled through GOOD. This leads to the use of manners for explicit service semantics representation in a re-configurable architectural style. We describe the base requirements for automated component and services composition and show how automated assembly of components and services can be accomplished through a dynamically reconfigurable (DyRec) architectural style. In addition, we show how this vision of dynamic reconfiguration is naturally supported by the Web services framework, because it derives from some of the core requirements of the service oriented architectures (SOA) style embodied by Web services. Further, we discuss how such a DyRec architectural style can be implemented using grammar-oriented object design (GOOD) and describe a project that led to a tool called the Business Compiler, to accomplish dynamic composition and collaboration.