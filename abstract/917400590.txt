Service-based software system (SBS) is a software system based on service-oriented architecture (SOA). Although often treated as a composite service, an SBS is proposed from a more practical point of view based on restricted service provisions. In the highly competitive market, just meeting such requirements seems not enough to get more customers for service providers, and they usually provide additional preferential policies, such as a special order "buy-two-get-one-free". However, most of current adaptation approaches focus on single transaction, which makes it hard to take full advantage of such preferential policies in reselecting substitutable services. In this paper, we try to make the adaptation decision and reselect services from a broader view, i.e. expand the computation domain from single transaction to the whole lifecycle of an SBS by considering all of the past, current and predicable future executions. We call it "long-term benefit" to distinguish benefit in current approaches and propose a long-term benefit driven adaptation approach in this paper. In our approach, services that would bring the max expected long-term benefit would be selected and substituted into current instance in once adaptation. As the long-term benefit is accumulated in several executions, i.e. it depends on a decision sequence, we model the decision making problem as a sequential decision problem, and describe a realization based on partially observable Markov decision process (POMDP) for maximizing the real income in providing an SBS as an example.