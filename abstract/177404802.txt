Whilst the vision of a robust service-oriented architecture (SOA) is very seductive it engenders many technical challenges. The main challenge is the development and support of runtime cross-standard service activation and interoperation. Such interoperation will provide a vital stepping-stone towards the integration of the emerging SOA standards and legacy services - those developed using existing middleware architectures such as DCOM, CORBA, J2EE, Web service, JXTA, and Jini. Much related works already exist including WSIF framework, which provides APIs to support design-time invocation of cross-standard Web services deployed on multiple SOAP packages. However, this paper focuses on a runtime self-regenerative mechanism related to adaptive service invocation code. The paper will present a runtime service adaptation mechanism, which supports end-users to dynamically adapt to variations in the execution environment, without altering their original design, crossing multiple standards (both synchronous and asynchronous invocation models) and middleware architectures. This paper also introduces a proposed "Polyarchical Middleware" architecture to support such self-regenerative service adaptation. An illustrative example will be used to describe the approach and the current implementation. The paper will conclude with general remarks and mention of further work.