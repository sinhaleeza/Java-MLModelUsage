By discovering and reusing relevant web services, an organization can select and compose those services that most closely meet its business and Quality of Service (QoS) needs. As the number of available web services increases, selecting the best fit services for a given task becomes more challenging. QoS attributes play a significant role in the selection process by directing service composition constraints to a workflow plan that has the best QoS values. Two major problems arise at runtime when undesirable events necessitate the need to reselect services and replan the service bindings. First, if the reselection process consumes additional time, it can impact a temporal QoS constraint. Second, the newly generated composition might not comply with other QoS constraints imposed on the plan. This paper proposes an approach to composing web services that both performs reselection and avoids the violation of QoS constraints after replanning by defining and evaluating a replaceability property. Replaceability factors directly into the algorithm's original service selection process considering all QoS constraints.