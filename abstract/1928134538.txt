The unpredictable performance of cloud computing platforms (caused by multitenancy) and the irregular resource requirements of scientific workflows pose several challenges to scheduling and resource provisioning. An efficient scheduling algorithm must be able to detect and react to workload changes and take advantage of cloud elasticity to tackle these issues. This work presents a scheduling algorithm that leverages the structure of scientific workflows and the elasticity of cloud computing platforms to devise schedules that minimize the workflow execution time, while satisfying a budget constraint. Experiments showed that a dynamic provisioning system using this algorithm was able to appropriately respond to performance fluctuations of a public cloud without significant impact to the makespan and cost of workflow executions.