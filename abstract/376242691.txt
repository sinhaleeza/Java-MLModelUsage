In real-world scenarios, the evolution of Web services to meet functional and non-functional changes ultimately leads to multiple versions of the same original service. Thus, design and implementation of version management techniques, such as version description, directory, etc, play a critical role in realizing the full promise of SOA. To address the version management issues in Web services, we propose a version-aware service model based on some architectural extensions to WSDL and UDDI. WSDL would be enhanced to describe the attributes of the service versions. UDDI would be augmented to use versions in a service directory with an event-based notification/subscription mechanism. We also design a proxy, residing in the service consumer side which can dynamically update the client application instance at runtime. We have implemented a prototype to demonstrate these models and used a weather forecast web service as an example to illustrate the usefulness of the proposed architecture.