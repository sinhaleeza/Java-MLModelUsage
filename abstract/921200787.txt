This paper presents a REST service composition framework based on functional programming with monads. It is motivated by the acute needs for dynamism and compos ability in concurrent control of large number of REST resources, especially in the areas of Cloud computing, software-defined networking (SDN), and Internet-of-Things/Web-of-Things. Dynamism gives us the ability to write a REST service composition program to invoke REST services whose identifications and operations are unknown at the design time, and compos ability gives us the ability to combine existing programs for different purposes. The key idea of our approach is to treat the primitives of a composition program, including resource identifications, operations, and control structures, as unknown functions and monads that can be dynamically composed from known functions and monads. We present the algebraic operators and rules that govern the compositions and its translation to XML, to combine the modularity and flexibility of functional programming with the portability and extensibility of XML. A prototype composition engine has been implemented and used to compose REST services in the Cloud computing domain. The initial experimental results indicate that the approach is feasible and promising.