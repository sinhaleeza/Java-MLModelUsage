With the increasing popularity of Web services, a number of technologies have emerged that target the integration and composition of Web services as lightweight components. However, a number of problems have been identified in these approaches, for example regarding an overly static integration and lacking support for the modularization of crosscutting concerns. In this paper, we evaluate FuseJ, an architectural description language for unifying aspects and components, as an approach for the composition of Web services. We outline how FuseJ can be used to this end and present an evaluation that compares FuseJ to four other Web service composition approaches according to criteria such as the organization and flexibility of the composition and the support for aspect-oriented software development (AOSD). Although FuseJ does not allow describing complete business processes, we find that it excels at selective and dynamic composition and that it supports advanced separation of concerns without the need to introduce additional constructs.